# Default values for complex-k8s.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# see https://www.elastic.co/guide/en/beats/filebeat/current/configuration-autodiscover.html

worker:
  enabled: true
  image: aleksaspielikis/multi-worker

client:
  enabled: true
  replicas: 3
  image: aleksaspielikis/multi-client

server:
  enabled: true
  replicas: 3
  image: aleksaspielikis/multi-server

redis:
  enabled: true
  clusterPort: 6379

metricbeat:
  enabled: true
  metricbeatConfig:
    kube-state-metrics-metricbeat.yml: |
      metricbeat.modules:
      - module: kubernetes
        enabled: true
        metricsets:
          - state_node
          - state_deployment
          - state_replicaset
          - state_pod
          - state_container
        period: 10s
        hosts: ["${KUBE_STATE_METRICS_HOSTS}"]

      output.elasticsearch:
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'

      setup:
        kibana:
          host: '${KIBANA_HOST:my-release-kibana}:${KIBANA_PORT:5601}'
        dashboards:
          enabled: true
    metricbeat.yml: |
      system:
        hostfs: /hostfs
      metricbeat.autodiscover: #https://www.elastic.co/guide/en/beats/metricbeat/current/configuration-autodiscover.html
        providers:
        - type: kubernetes
          labels.dedot: true
          templates:
            - condition:
                contains:
                  kubernetes.container.image: "redis"
              config:
                - module: redis
                  metricsets: ["info", "keyspace"]
                  hosts: "${data.host}:6379"
                  period: 10s
            - condition:
                contains:
                  kubernetes.container.image: "postgres"
              config:
                - module: postgresql
                  metricsets: ["activity", "bgwriter", "database"]
                  hosts: "${data.host}:5432?sslmode=disable"
                  username: ${PGUSER}
                  password: ${PGPASSWORD}
                  period: 10s
      output.elasticsearch:
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'
        
  extraEnvs:
    - name: PGUSER
      value: postgres
    - name: PGPASSWORD
      valueFrom:
        secretKeyRef:
          name: pgpassword
          key: PGPASSWORD

filebeat:
  enabled: true
  filebeatConfig:
    filebeat.yml: |-
      filebeat.autodiscover:
        providers:
          - type: kubernetes
            templates:
              - condition.contains:
                  kubernetes.container.image: redis
                config:
                  - module: redis
                    log:
                      input:
                        type: docker
                        containers.ids:
                          - ${data.kubernetes.container.id}
                    slowlog:
                      enabled: true
                      var.hosts: ["${data.host}:${data.port}"]
              - condition.contains:
                  kubernetes.container.image: postgres
                config:
                  - module: postgresql
                    log:
                      input:
                        type: docker
                        containers.ids:
                          - ${data.kubernetes.container.id}
      processors:
        - add_host_metadata:
        
      output.elasticsearch:
        host: '${NODE_NAME}'
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'

      logging.metrics.enabled: false

      setup:
        template.enabled: true
        kibana:
          host: '${KIBANA_HOST:my-release-kibana}:${KIBANA_PORT:5601}'
        dashboards:
          enabled: true

kibana:
  enabled: true
  server:
    basePath: /kibana
    rewriteBasePath: true
  extraEnvs:
  - name: SERVER_BASEPATH
    value: /kibana

elasticsearch:
  enabled: true
  antiAffinity: "soft"
  
  volumeClaimTemplate:
    resources:
      requests:
        storage: 10Gi

postgres:
  enabled: true
  clusterPort: 5432
  storage: 2Gi
  secretKeyRef:
    name: pgpassword
    key: PGPASSWORD

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1    
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/kibana/?(.*)$ /$1 break;
      proxy_set_header Authorization "";
  expose:
    client:
      path: /?(.*)
      clusterPort: 3000
    kibana:
      path: /kibana/?(.*)
      clusterPort: 5601
    server:
      path: /api/?(.*)
      clusterPort: 5000
